@model IEnumerable<PiDevCRM.Domain.Entities.Product>

@{
    ViewBag.Title = "Product List";
    Layout = "~/Views/Shared/_AdminLayout2.cshtml";
}



<div class="card-header py-3">
    <h6 class="m-0 font-weight-bold text-primary">Products List</h6>
</div>
<div class="card-body">
    @Html.ActionLink("Create New", "Create")
    <div class="table-responsive">
        <div><input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for a product.." title="Type in a name of product"></div>
        <br/>
        <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.NameProduct)</th>
                    <th>@Html.DisplayNameFor(model => model.Description)</th>
                    <th>@Html.DisplayNameFor(model => model.Price)</th>
                    <th>@Html.DisplayNameFor(model => model.ImageProduct)</th>
                    <th>@Html.DisplayNameFor(model => model.Availability)</th>
                    <th>@Html.DisplayNameFor(model => model.Category)</th>
                    <th>@Html.DisplayNameFor(model => model.Discount)</th>
                    <th>@Html.DisplayNameFor(model => model.Pack)</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.NameProduct)</td>
                        <td>@Html.DisplayFor(modelItem => item.Description)</td>
                        <td>@Html.DisplayFor(modelItem => item.Price)</td>
                        <td>
                            @*@Html.DisplayFor(modelItem => item.ImageProduct)*@
                            @{ string path = "~/Content/uploads/" + @item.ImageProduct;}
                            <img src="@Url.Content(path)" width="50" height="50" />
                        </td>
                        <td>
                            @if (item.IdStock != null)
                            {
                                <p>In_Stock</p>
                            }
                            @if (item.IdStock == null)
                            {
                                <p>Out_Of_Stock</p>
                            }

                        </td>
                        <td>@Html.DisplayFor(modelItem => item.Category.CategoryName)</td>
                        <td>@Html.DisplayFor(modelItem => item.Discount.Pourcentage)</td>
                        <td>@Html.DisplayFor(modelItem => item.Pack.PackName)</td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.IdProduct }) |
                            @Html.ActionLink("Details", "Details", new { id = item.IdProduct }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.IdProduct })
                        </td>
                    </tr>
                }
        </table>
    </div>
</div>

<!-- Bootstrap core JavaScript-->
<script src="vendor/jquery/jquery.min.js"></script>
<script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
<!-- Core plugin JavaScript-->
<script src="vendor/jquery-easing/jquery.easing.min.js"></script>
<!-- Custom scripts for all pages-->
<script src="js/sb-admin-2.min.js"></script>
<!-- Page level plugins -->
<script src="vendor/datatables/jquery.dataTables.min.js"></script>
<script src="vendor/datatables/dataTables.bootstrap4.min.js"></script>
<!-- Page level custom scripts -->
<script src="js/demo/datatables-demo.js"></script>




<script>
    //fonction recherche par nom ajax
    function myFunction() {
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("dataTable");
        tr = table.getElementsByTagName("tr");
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }


</script>








